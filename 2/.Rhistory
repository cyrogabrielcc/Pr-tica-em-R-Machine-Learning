library(rpart)
library(rpart)
library(rpart)
credit = read.csv("Credit.csv")
head(credit, 5)
View(credit)
View(credit)
View(credit)
View(credit)
# 2 a cada mil, com reposição
amostra = sample(2,1000, replace = T, prob = c(0.7,0.3))
creditest = credit[amostra==1,]
creditreino = credit[amostra==2,]
library(rpart)
credit = read.csv("Credit.csv")
head(credit, 5)
# 2 a cada mil, com reposição
amostra = sample(2,1000, replace = T, prob = c(0.7,0.3))
creditest = credit[amostra==1,]
creditreino = credit[amostra==2,]
tree = rpart(class~., data = creditreino, method = 'class')
print(tree)
plot(tree)
text(tree, use.n = TRUE, all = TRUE)
trp(tree)
prp(tree)
rpart.plot(tree)
rpart.plot(tree, type = 3)
plot(tree, type = 3)
plot(tree)
text(tree, use.n = TRUE, all = TRUE)
install.packages('maptree')
install.packages('rpart.plot')
library(rpart)
library(rpart.plot)
rpart.plot(tree)
text(tree, use.n = TRUE, all = TRUE)
rpart.plot(tree, type = 1)
text(tree, use.n = TRUE, all = TRUE)
rpart.plot(tree, type = 2)
text(tree, use.n = TRUE, all = TRUE)
rpart.plot(tree, type = 3)
text(tree, use.n = TRUE, all = TRUE)
test = predict(tree,newdata = creditest)
head(test)
cred = cbind(creditest, test)
cred
cred['Result' = ifelse(cred$bad >= 5, "bad", "good") ]
cred['Result'] = ifelse(cred$bad >= 5, "bad", "good") ]
cred['Result'] = ifelse(cred$bad >= 5, "bad", "good")
cred
confusion = table(cred$class, cred$Result)
ta = (confusion[1] + confusion[2])/sum(confusion)
ta
confusion = table(cred$class, cred$Result)
ta = (confusion[1] + confusion[4])/sum(confusion)
ta
library(rpart)
library(rpart.plot)
credit = read.csv("Credit.csv")
head(credit, 5)
# 70% treino e 30% teste
amostra = sample(2,1000, replace = T, prob = c(0.7,0.3))
creditest = credit[amostra==1,]
creditreino = credit[amostra==2,]
tree = rpart(class~., data = creditreino, method = 'class')
print(tree)
rpart.plot(tree, type = 3)
text(tree, use.n = TRUE, all = TRUE)
confusion = table(cred$class, cred$Result)
confusion
ta = (confusion[1] + confusion[4])/sum(confusion)
ta
library(rpart)
library(rpart.plot)
credit = read.csv("Credit.csv")
head(credit, 5)
# 70% treino e 30% teste
amostra = sample(2,1000, replace = T, prob = c(0.7,0.3))
creditest = credit[amostra==1,]
creditreino = credit[amostra==2,]
tree = rpart(class~., data = creditreino, method = 'class')
print(tree)
rpart.plot(tree, type = 3)
text(tree, use.n = TRUE, all = TRUE)
confusion = table(cred$class, cred$Result)
confusion
ta = (confusion[1] + confusion[4])/sum(confusion)
ta
credit = read.csv("Credit.csv")
head(credit, 5)
# 70% treino e 30% teste
amostra = sample(2,1000, replace = T, prob = c(0.7,0.3))
creditreino = credit[amostra==1,]
crediteste = credit[amostra==2,]
tree = rpart(class~., data = creditreino, method = "class")
print(tree)
rpart.plot(tree, type = 3)
rpart.plot(tree, type = 3)
text(tree, use.n = TRUE, all = TRUE)
rpart.plot(tree, type = 4)
text(tree, use.n = TRUE, all = TRUE)
rpart.plot(tree, type = 1)
text(tree, use.n = TRUE, all = TRUE)
rpart.plot(tree, type = 3)
text(tree, use.n = TRUE, all = TRUE)
rpart.plot(tree, type = 3)
cred = cbind(creditest, test)
library(rpart)
library(rpart.plot)
credit = read.csv("Credit.csv")
head(credit, 5)
# 70% treino e 30% teste
amostra = sample(2,1000, replace = T, prob = c(0.7,0.3))
creditreino = credit[amostra==1,]
crediteste = credit[amostra==2,]
tree = rpart(class~., data = creditreino, method = "class")
print(tree)
rpart.plot(tree, type = 3)
test = predict(tree,newdata = creditest)
head(test)
cred = cbind(creditest, test)
cred
cred['Result'] = ifelse(cred$bad >= 0.5, "bad", "good")
cred
confusion = table(cred$class, cred$Result)
confusion
ta = (confusion[1] + confusion[4])/sum(confusion)
ta
tree = rpart(class~., data = creditreino, method = "class")
print(tree)
rpart.plot(tree, type = 3)
text(tree, use.n = TRUE, all = TRUE)
rpart.plot(tree)
text(tree, use.n = TRUE, all = TRUE)
rpart.plot(tree, type = 2, yesno=F, fallen.leaves = F,
extra = 102, under = T, cex=NULL, uniform=T, varlen=3, gap=0,
space=0, tweak=1.2);
